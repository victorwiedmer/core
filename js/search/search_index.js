var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/interfaces/IKeyboardDeadkeys.html",[0,0.524,1,2.115]],["body/interfaces/IKeyboardDeadkeys.html",[0,0.905,1,3.656,2,0.639,3,0.522,4,0.639,5,2.597,6,3.877,7,0.522,8,4.577,9,1.374,10,3.877,11,1.228,12,0.906,13,3.877,14,0.413,15,0.055,16,3.877,17,0.048,18,0.048]],["title/interfaces/IKeyboardIcons.html",[0,0.524,19,2.115]],["body/interfaces/IKeyboardIcons.html",[0,0.913,2,0.649,3,0.53,4,0.649,5,2.619,7,0.53,9,1.38,12,0.919,14,0.419,15,0.053,17,0.048,18,0.048,19,3.688,20,3.935,21,2.619,22,3.935]],["title/interfaces/IKeyboardLayout.html",[0,0.524,23,1.118]],["body/interfaces/IKeyboardLayout.html",[0,0.866,2,0.594,3,0.485,4,0.594,5,2.042,7,0.485,9,1.414,11,1.495,14,0.383,15,0.056,17,0.046,18,0.046,21,2.785,23,1.85,24,3.6,25,1.85,26,1.387,27,3.921,28,1.555,29,0.841,30,3.497,31,2.876,32,0.485,33,3.6]],["title/interfaces/IKeyboardLayouts.html",[0,0.524,23,1.118]],["body/interfaces/IKeyboardLayouts.html",[0,0.904,2,0.637,3,0.52,4,0.637,5,2.592,7,0.52,9,1.247,12,0.903,14,0.412,15,0.055,17,0.048,18,0.048,23,2.167,29,0.903,34,3.866,35,2.592,36,3.866,37,1.415,38,3.088]],["title/interfaces/ILocaleMap.html",[0,0.524,39,1.764]],["body/interfaces/ILocaleMap.html",[0,0.913,2,0.649,3,0.53,4,0.649,7,0.53,9,1.38,12,0.919,14,0.419,15,0.053,17,0.048,18,0.048,39,3.076,40,4.617,41,3.935,42,3.076,43,3.935]],["title/classes/MatKeyboardConfig.html",[32,0.356,44,1.502]],["body/classes/MatKeyboardConfig.html",[2,0.403,3,0.329,4,0.403,7,0.329,9,0.928,11,1.457,12,1.102,14,0.26,15,0.057,17,0.036,18,0.036,25,1.437,26,1.621,29,0.913,32,0.458,37,1.684,44,1.929,45,2.444,46,4.227,47,3.377,48,3.377,49,3.377,50,3.844,51,4.6,52,4.813,53,2.246,54,1.943,55,2.444,56,2.716,57,4.227,58,4.227,59,3.675,60,2.444,61,4.6,62,3.4,63,2.716,64,2.716,65,2.444,66,3.4,67,3.4,68,3.4,69,2.716,70,2.716,71,3.4,72,2.266,73,2.716,74,2.266,75,2.444,76,4.227,77,3.065,78,2.444,79,4.227,80,3.4,81,2.444,82,2.716,83,2.444,84,2.266,85,2.716,86,2.716,87,0.774,88,1.387,89,1.629]],["title/components/MatKeyboardContainerComponent.html",[90,1.118,91,1.118]],["body/components/MatKeyboardContainerComponent.html",[2,0.193,3,0.157,4,0.193,7,0.157,11,1.201,12,1.055,14,0.263,15,0.057,17,0.02,18,0.02,21,0.662,25,0.816,26,0.612,28,1.007,29,0.947,31,1.543,32,0.157,37,1.794,44,1.628,53,1.552,54,1.343,69,1.543,70,1.543,74,1.912,77,2.526,84,2.416,87,0.37,90,1.756,91,1.213,92,1.931,93,0.933,94,0.933,95,4.569,96,2.592,97,1.167,98,0.662,99,1.931,100,1.931,101,1.543,102,0.943,103,2.62,104,1.931,105,2.47,106,1.646,107,1.973,108,1.167,109,0.778,110,1.931,111,1.931,112,1.931,113,2.736,114,3.179,115,1.931,116,1.931,117,1.931,118,1.931,119,2.409,120,2.87,121,2.87,122,2.87,123,3.179,124,2.87,125,0.943,126,2.87,127,1.931,128,2.87,129,2.282,130,2.7,131,2.293,132,2.47,133,3.029,134,2.47,135,1.973,136,1.931,137,1.931,138,0.662,139,1.167,140,2.87,141,2.47,142,2.87,143,1.931,144,1.043,145,1.931,146,2.293,147,2.87,148,1.167,149,2.53,150,1.931,151,1.167,152,1.543,153,2.54,154,1.167,155,2.47,156,1.167,157,1.543,158,2.87,159,1.931,160,1.167,161,1.931,162,1.167,163,1.167,164,2.47,165,1.931,166,2.293,167,2.526,168,1.931,169,1.931,170,1.931,171,1.287,172,1.931,173,1.851,174,1.206,175,1.931,176,2.293,177,1.167,178,1.167,179,2.54,180,2.736,181,1.973,182,1.167,183,2.47,184,1.167,185,2.87,186,1.931,187,1.167,188,1.931,189,1.931,190,1.973,191,1.167,192,1.543,193,1.543,194,2.47,195,1.931,196,2.87,197,1.167,198,1.931,199,2.87,200,1.167,201,1.931,202,1.167,203,1.931,204,2.47,205,1.931,206,3.563,207,1.401,208,1.167,209,2.293,210,1.543,211,1.167,212,1.931,213,1.167,214,1.167,215,0.933,216,0.778,217,1.167,218,1.167,219,1.167,220,0.933,221,0.933,222,0.933,223,1.167,224,0.933,225,1.167,226,0.933,227,1.167,228,1.167,229,1.931,230,1.646,231,1.167,232,1.167,233,0.933,234,1.167,235,1.167,236,1.167,237,1.167,238,1.167,239,1.167,240,1.167,241,1.167,242,1.912,243,1.167,244,1.167,245,1.167,246,1.167,247,1.167,248,1.167,249,0.933,250,1.931,251,1.167,252,1.167,253,1.931,254,1.167,255,0.933,256,1.931,257,1.167,258,0.778,259,1.931,260,1.167,261,0.933,262,1.167,263,1.167,264,1.167,265,1.167,266,1.167,267,1.167,268,1.167,269,0.662,270,0.778,271,1.167,272,1.167,273,1.167,274,1.167,275,1.167,276,1.543,277,1.167,278,0.778,279,1.167,280,1.167,281,1.167,282,1.167,283,1.931,284,2.47,285,1.167,286,1.931,287,1.931,288,0.933,289,1.167,290,1.167,291,1.167,292,1.167,293,1.167,294,1.167,295,1.167,296,1.167,297,1.931,298,1.931,299,1.167,300,1.167,301,1.167,302,1.167,303,1.167,304,1.167,305,0.933,306,0.933,307,1.167,308,1.167,309,0.778,310,1.931,311,0.943,312,2.87,313,1.167,314,0.493,315,1.167,316,1.167,317,0.778,318,0.57,319,0.933,320,0.933,321,1.167]],["title/directives/MatKeyboardDirective.html",[311,1.293,318,1.293]],["body/directives/MatKeyboardDirective.html",[2,0.357,3,0.291,4,0.357,7,0.291,9,0.851,11,1.528,12,1.163,14,0.23,15,0.057,17,0.033,18,0.033,25,1.317,26,1.158,28,0.685,29,0.991,32,0.291,47,3.196,48,3.196,49,3.196,50,3.196,63,2.49,73,2.92,87,0.685,88,1.226,106,2.077,107,2.92,109,1.44,113,2.49,119,2.584,125,1.522,131,3.196,135,2.92,138,1.226,144,0.913,152,2.49,153,3.725,167,1.44,173,1.056,174,1.056,207,1.954,270,1.44,311,1.785,314,0.913,318,1.522,319,2.49,320,2.49,322,2.162,323,4.001,324,3.725,325,3.656,326,4.663,327,3.656,328,3.656,329,3.656,330,3.656,331,3.656,332,2.162,333,4.001,334,3.656,335,1.954,336,3.656,337,3.117,338,3.117,339,2.162,340,3.196,341,2.162,342,2.162,343,2.162,344,2.162,345,4.979,346,2.162,347,2.162,348,2.162,349,2.162,350,2.162,351,2.162,352,2.27,353,2.162,354,3.117,355,1.727,356,1.727,357,1.226,358,1.727,359,2.162,360,2.162,361,2.162,362,3.117,363,2.162,364,2.162,365,2.162,366,2.162,367,1.44,368,2.162,369,1.226,370,2.162,371,1.727,372,2.162,373,2.162,374,2.162,375,2.162,376,2.162,377,2.162,378,2.162,379,2.162,380,2.162,381,2.162,382,2.162,383,2.162,384,2.162,385,2.162,386,2.162,387,2.162,388,2.162,389,2.162]],["title/pipes/MatKeyboardKebabCasePipe.html",[390,1.764,391,1.502]],["body/pipes/MatKeyboardKebabCasePipe.html",[2,0.581,3,0.474,4,0.581,9,1.365,11,1.116,12,0.823,14,0.375,15,0.056,17,0.045,18,0.045,26,1.116,28,1.481,29,0.823,32,0.474,54,1.488,74,2.347,87,1.116,106,2.347,109,2.347,125,1.72,144,1.488,173,2.109,261,2.814,390,3.114,391,2.451,392,4.32,393,3.522,394,4.32,395,4.32,396,3.522,397,4.32,398,3.522,399,3.522,400,3.522,401,3.522,402,2.347,403,2.347,404,3.522,405,3.522]],["title/modules/MatKeyboardModule.html",[406,1.118,407,1.293]],["body/modules/MatKeyboardModule.html",[2,0.362,3,0.295,4,0.362,14,0.429,15,0.057,17,0.033,18,0.033,29,1.207,32,0.295,87,0.695,89,1.462,90,0.927,91,2.125,96,1.245,102,2.234,216,1.462,220,1.753,309,1.462,311,1.071,314,2.125,317,3.352,318,2.416,335,2.169,357,1.245,358,1.753,391,2.52,406,1.876,407,2.532,408,1.071,409,2.945,410,1.753,411,1.753,412,1.753,413,1.753,414,1.753,415,2.517,416,1.462,417,1.462,418,2.194,419,3.151,420,2.194,421,3.151,422,1.753,423,2.517,424,2.456,425,3.151,426,3.151,427,3.151,428,1.462,429,3.151,430,2.099,431,3.151,432,2.517,433,1.753,434,3.151,435,2.194,436,3.151,437,2.194,438,1.462,439,3.151,440,3.151,441,2.945,442,2.194,443,3.151,444,3.151,445,2.194,446,2.517,447,2.099,448,1.753,449,2.099,450,1.462,451,2.194,452,2.194,453,2.194,454,2.194,455,2.194,456,2.945]],["title/classes/MatKeyboardRef.html",[32,0.356,352,1.502]],["body/classes/MatKeyboardRef.html",[2,0.32,3,0.261,4,0.32,7,0.261,11,1.286,12,1.098,14,0.206,15,0.057,17,0.03,18,0.03,25,1.216,26,0.614,28,0.614,29,0.948,32,0.387,37,1.877,53,1.405,54,1.216,72,2.933,90,1.714,91,1.86,93,2.299,96,1.099,98,1.099,101,3.034,103,2.704,119,2.667,125,1.405,130,1.291,138,1.099,144,0.819,171,2.833,173,2.149,174,1.676,190,3.69,192,3.034,206,3.964,207,1.855,209,3.612,210,2.742,221,1.548,222,1.548,314,1.86,352,1.632,357,1.099,367,1.917,369,1.099,428,1.291,449,1.291,450,1.291,457,4.77,458,1.938,459,2.299,460,2.299,461,3.798,462,3.798,463,4.522,464,4.77,465,3.798,466,3.798,467,3.034,468,3.798,469,2.877,470,3.432,471,3.034,472,2.877,473,1.938,474,4.252,475,1.938,476,3.396,477,3.798,478,1.938,479,1.938,480,2.877,481,1.938,482,2.877,483,1.938,484,2.531,485,1.938,486,1.938,487,1.938,488,1.938,489,1.938,490,1.938,491,1.938,492,1.938,493,1.938,494,1.938,495,1.938,496,1.938,497,1.938,498,1.938,499,1.938,500,1.938,501,1.938]],["title/injectables/MatKeyboardService.html",[335,1.293,502,1.502]],["body/injectables/MatKeyboardService.html",[2,0.172,3,0.14,4,0.172,7,0.14,9,1.252,11,1.191,12,1.01,14,0.111,15,0.058,17,0.018,18,0.028,23,1.453,25,0.741,26,1.349,28,1.37,29,0.977,32,0.14,35,2.55,37,1.806,38,0.831,39,1.986,42,2.836,44,2.372,53,1.304,54,1.453,56,1.401,59,2.886,64,0.831,72,2.59,77,1.779,82,2.133,84,2.154,85,2.133,86,2.886,87,0.33,89,0.693,90,1.365,91,0.961,94,1.401,96,0.59,98,1.515,102,1.11,103,1.779,119,2.623,125,0.856,129,1.169,130,0.693,133,0.831,138,0.59,144,1.526,149,0.59,166,1.401,171,0.693,173,2.238,174,0.856,176,0.831,179,1.401,180,0.831,181,1.401,207,1.898,216,0.693,224,0.831,230,1.779,242,2.664,258,1.169,269,1.515,270,0.693,276,0.831,278,1.169,305,0.831,306,1.401,314,0.44,335,1.455,340,0.831,352,2.454,355,0.831,356,0.831,357,0.59,367,1.779,369,1.29,371,1.401,424,1.169,428,0.693,430,1.169,438,2.882,441,0.831,447,0.693,448,0.831,449,0.693,450,0.693,459,2.133,460,2.133,467,1.401,471,3.004,476,3.004,502,1.515,503,1.04,504,1.754,505,2.67,506,2.67,507,1.754,508,1.754,509,2.67,510,1.754,511,1.754,512,1.754,513,1.754,514,2.981,515,2.274,516,2.274,517,1.04,518,2.274,519,2.67,520,2.274,521,2.274,522,2.274,523,1.04,524,1.754,525,1.754,526,1.04,527,1.754,528,1.04,529,1.04,530,2.67,531,1.754,532,1.754,533,1.04,534,3.613,535,1.754,536,1.04,537,1.754,538,1.04,539,2.274,540,2.67,541,1.754,542,1.04,543,1.754,544,2.981,545,1.754,546,1.754,547,1.754,548,1.04,549,1.401,550,1.754,551,1.04,552,1.04,553,1.754,554,3.232,555,1.754,556,1.754,557,1.754,558,1.04,559,1.04,560,1.04,561,1.04,562,1.04,563,1.04,564,1.04,565,1.04,566,1.754,567,0.831,568,1.754,569,1.754,570,1.04,571,1.04,572,1.04,573,0.831,574,0.831,575,1.04,576,1.754,577,1.04,578,1.754,579,1.04,580,1.04,581,1.754,582,3.613,583,1.04,584,1.04,585,1.04,586,0.831,587,1.04,588,2.981,589,2.67,590,1.04,591,1.04,592,1.04,593,1.04,594,1.04,595,1.04,596,1.754,597,1.754,598,1.04,599,1.754,600,1.04,601,1.04,602,1.04,603,1.04,604,1.04,605,1.04,606,1.04,607,1.04,608,1.04,609,1.04,610,1.754,611,1.754,612,1.04,613,0.831,614,1.754,615,1.04,616,1.04,617,1.04,618,1.04,619,1.04,620,1.04,621,1.754,622,0.831,623,1.04,624,1.754,625,1.04,626,0.831,627,1.04,628,1.04,629,0.831,630,1.04,631,2.274,632,1.04,633,0.831,634,1.04,635,0.831,636,1.04,637,1.04,638,1.04,639,1.04,640,1.04,641,1.04,642,1.04,643,1.04,644,1.04,645,1.04,646,1.04,647,1.04,648,1.04,649,1.04,650,1.04,651,1.04,652,1.04,653,1.04,654,1.04,655,1.04,656,1.04,657,1.04,658,1.04]],["title/dependencies.html",[408,1.552,659,2.221]],["body/dependencies.html",[15,0.057,17,0.045,18,0.045,87,1.113,88,1.993,149,1.993,215,2.806,408,1.715,416,2.341,422,2.806,660,5.242,661,3.513,662,4.313,663,3.513,664,3.513,665,3.513,666,3.445,667,2.874,668,3.513,669,3.513,670,3.513,671,3.513,672,3.513,673,4.313,674,3.513,675,3.513,676,3.513,677,3.513,678,3.513,679,3.513,680,3.513,681,3.513,682,3.513,683,3.513,684,3.513]],["title/miscellaneous/enumerations.html",[685,1.26,686,2.539]],["body/miscellaneous/enumerations.html",[7,0.433,15,0.056,17,0.043,18,0.043,30,3.263,32,0.55,54,2.242,129,2.721,146,3.263,149,2.677,174,2.191,226,3.263,255,3.584,258,3.144,626,3.584,685,1.826,686,2.572,687,4.719,688,4.085,689,4.085,690,4.085,691,4.085,692,4.085,693,4.719,694,3.219,695,3.219,696,4.486,697,3.219,698,3.219,699,4.085,700,3.219,701,3.219,702,3.219,703,3.219,704,3.219,705,4.085,706,3.219,707,3.219]],["title/miscellaneous/functions.html",[685,1.26,708,2.539]],["body/miscellaneous/functions.html",[7,0.508,15,0.052,17,0.047,18,0.047,26,1.526,28,1.428,35,2.556,37,1.383,53,2.2,98,2.142,144,1.904,269,2.142,438,3.002,573,3.6,574,3.6,586,3.017,622,3.017,685,2.142,708,3.017,709,4.506,710,3.776,711,3.776,712,4.506,713,4.816]],["title/index.html",[7,0.299,484,1.48,714,1.774]],["body/index.html",[3,0.312,14,0.348,15,0.057,17,0.034,18,0.034,21,1.313,23,1.383,27,1.849,28,1.037,29,1.109,32,0.441,35,2.636,37,1.39,42,2.181,87,0.733,88,1.313,102,2.207,157,1.849,167,1.542,193,1.849,207,1.13,230,2.75,233,3.033,242,1.542,249,1.849,269,1.857,278,1.542,288,2.614,324,1.849,369,1.313,402,1.542,403,1.542,406,1.744,407,1.854,408,1.13,417,1.542,423,3.033,424,3.012,430,3.097,432,2.614,433,1.849,446,2.614,447,2.181,456,1.849,484,1.542,502,1.313,549,1.849,567,1.849,613,3.033,629,1.849,633,1.849,635,2.614,666,2.614,667,2.181,714,1.849,715,4.127,716,2.315,717,3.273,718,3.273,719,3.273,720,2.315,721,2.315,722,2.315,723,2.315,724,2.315,725,2.315,726,2.315,727,2.315,728,3.273,729,2.315,730,3.273,731,3.273,732,2.315,733,2.315,734,3.273,735,2.315,736,3.273,737,2.315,738,3.797,739,2.315,740,2.315,741,2.315,742,2.315,743,2.315,744,2.315,745,2.315,746,3.273,747,3.273,748,3.273,749,2.315,750,3.797,751,2.614,752,2.315,753,2.315,754,2.315,755,2.315,756,2.315,757,2.315,758,2.315,759,2.315,760,2.315,761,2.315,762,2.315,763,2.315,764,2.315,765,2.315,766,2.315,767,2.315,768,2.315,769,2.315,770,2.315,771,2.315,772,2.315,773,2.315,774,2.315,775,2.315,776,2.315,777,2.315,778,2.315,779,3.273,780,2.315,781,2.315,782,2.315,783,2.315,784,2.315,785,3.273,786,2.315,787,2.315,788,2.315,789,2.315,790,2.315,791,2.315,792,2.315,793,2.315,794,2.315,795,2.315,796,2.315]],["title/modules.html",[406,1.518]],["body/modules.html",[15,0.05,17,0.05,18,0.05,406,1.746,407,2.018,667,2.754,797,4.134,798,4.134,799,4.134]],["title/overview.html",[800,2.869]],["body/overview.html",[0,0.643,14,0.346,15,0.055,17,0.043,18,0.043,32,0.438,90,1.374,91,2.14,102,1.587,309,2.166,311,1.587,314,2.14,317,3.375,318,2.474,335,2.201,390,2.166,391,2.557,402,3.155,403,2.166,406,1.736,407,2.623,408,1.587,409,2.597,410,2.597,411,2.597,412,2.597,413,2.597,414,2.597,415,3.283,416,2.166,417,2.166,502,1.844,751,2.597,800,2.597,801,3.251]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":64,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["0.8.20",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":402,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{},"index.html":{},"overview.html":{}}}],["1.1.20150312",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":651,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["2",{"_index":403,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{},"index.html":{},"overview.html":{}}}],["2.0.8",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":751,"title":{},"body":{"index.html":{},"overview.html":{}}}],["5",{"_index":801,"title":{},"body":{"overview.html":{}}}],["5.2.2",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["5.2.5",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["_afterclos",{"_index":461,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["_afteropen",{"_index":462,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["_animationst",{"_index":266,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_applyavailablelayout",{"_index":573,"title":{},"body":{"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["_applyavailablelayouts(_layout",{"_index":587,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_applyavailablelayouts(layout",{"_index":711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["_applyconfigdefault",{"_index":574,"title":{},"body":{"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["_applyconfigdefaults(config",{"_index":622,"title":{},"body":{"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["_attachkeyboardcont",{"_index":508,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_attachkeyboardcontain",{"_index":507,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_attachkeyboardcontainer(overlayref",{"_index":525,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_attachkeyboardcontent(config",{"_index":527,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_availablelocal",{"_index":505,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_changedetectorref",{"_index":141,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_completeexit",{"_index":126,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_config",{"_index":621,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_control",{"_index":336,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["_createoverlay",{"_index":509,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_defaultlocal",{"_index":520,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_destroy",{"_index":120,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_elementref",{"_index":338,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["_finishdismiss",{"_index":465,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["_hidekeyboard",{"_index":388,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["_keyboardref",{"_index":323,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["_keyboardrefatthislevel",{"_index":506,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_keyboardservic",{"_index":334,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["_layout",{"_index":521,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_live",{"_index":518,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_ngzone",{"_index":145,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_open",{"_index":466,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["_openedkeyboardref",{"_index":514,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_openedkeyboardref(valu",{"_index":579,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_overlay",{"_index":524,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_overlayref",{"_index":470,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["_parentkeyboard",{"_index":522,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["_portaloutlet",{"_index":121,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["_showkeyboard",{"_index":361,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["abstract",{"_index":375,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["accessor",{"_index":513,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["action",{"_index":543,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["actual_compon",{"_index":321,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["add",{"_index":742,"title":{},"body":{"index.html":{}}}],["addit",{"_index":546,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["afterdismiss",{"_index":467,"title":{},"body":{"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["afteropen",{"_index":468,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["alert",{"_index":150,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["alreadi",{"_index":278,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["alt",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altclick",{"_index":327,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["altgr",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altgraph",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altlk",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["analyz",{"_index":237,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["angular",{"_index":424,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["angular/anim",{"_index":215,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11i",{"_index":89,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{}}}],["angular/cdk/overlay",{"_index":428,"title":{},"body":{"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["angular/cdk/port",{"_index":216,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{}}}],["angular/common",{"_index":422,"title":{},"body":{"modules/MatKeyboardModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":87,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/form",{"_index":88,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":433,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{}}}],["angular/material/cor",{"_index":220,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{}}}],["angular/material/icon",{"_index":435,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["angular/material/input",{"_index":437,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["angular/platform",{"_index":666,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/rout",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["angular2html",{"_index":755,"title":{},"body":{"index.html":{}}}],["anim",{"_index":149,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["animate(hide_anim",{"_index":256,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animate(show_anim",{"_index":259,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animation.t",{"_index":232,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationcurv",{"_index":218,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationcurves.acceleration_curv",{"_index":248,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationcurves.deceleration_curv",{"_index":245,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationdur",{"_index":219,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationdurations.ent",{"_index":244,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationdurations.exit",{"_index":247,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["animationev",{"_index":155,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["announc",{"_index":57,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["announcementmessag",{"_index":46,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["anyth",{"_index":236,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["aot",{"_index":240,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["app.module.t",{"_index":744,"title":{},"body":{"index.html":{}}}],["appear",{"_index":477,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["appli",{"_index":713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applic",{"_index":791,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":750,"title":{},"body":{"index.html":{}}}],["argument",{"_index":152,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["arialivepolit",{"_index":79,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["asobserv",{"_index":304,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["assert",{"_index":80,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["attach",{"_index":179,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["attachcomponentport",{"_index":127,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["attachcomponentportal(port",{"_index":175,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["attachtemplateport",{"_index":128,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["attr.rol",{"_index":134,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["attrrol",{"_index":268,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["automat",{"_index":71,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["avail",{"_index":586,"title":{},"body":{"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["availablelocal",{"_index":515,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["awesom",{"_index":782,"title":{},"body":{"index.html":{}}}],["back",{"_index":777,"title":{},"body":{"index.html":{}}}],["backspac",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bar",{"_index":189,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["base",{"_index":613,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["baseportaloutlet",{"_index":105,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["basicli",{"_index":778,"title":{},"body":{"index.html":{}}}],["befor",{"_index":70,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{}}}],["begin",{"_index":185,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["bksp",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blur",{"_index":73,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"injectables/MatKeyboardService.html":{}}}],["bootstrap",{"_index":410,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["bottom('0",{"_index":657,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["branch",{"_index":795,"title":{},"body":{"index.html":{}}}],["brows",{"_index":799,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":667,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":749,"title":{},"body":{"index.html":{}}}],["browseranimationsmodul",{"_index":748,"title":{},"body":{"index.html":{}}}],["browsermodul",{"_index":747,"title":{},"body":{"index.html":{}}}],["callback",{"_index":194,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["can't",{"_index":229,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["cap",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["capsclick",{"_index":328,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["capslock",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["case.pip",{"_index":455,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["case.pipe.t",{"_index":393,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["case.pipe.ts:9",{"_index":396,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["cast",{"_index":372,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["caus",{"_index":290,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["cdk",{"_index":425,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["cdkportaloutlet",{"_index":199,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["centerhorizont",{"_index":656,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["ch",{"_index":784,"title":{},"body":{"index.html":{}}}],["chang",{"_index":768,"title":{},"body":{"index.html":{}}}],["changedetect",{"_index":110,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["changedetectionstrategi",{"_index":217,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":111,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["changedetectorref",{"_index":142,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["class",{"_index":32,"title":{"classes/MatKeyboardConfig.html":{},"classes/MatKeyboardRef.html":{}},"body":{"interfaces/IKeyboardLayout.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["classes/keyboard",{"_index":355,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"injectables/MatKeyboardService.html":{}}}],["classlist.j",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["clean",{"_index":480,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["clear",{"_index":604,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["close",{"_index":474,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["cluster_matkeyboardmodul",{"_index":411,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["cluster_matkeyboardmodule_declar",{"_index":412,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["cluster_matkeyboardmodule_export",{"_index":413,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["cluster_matkeyboardmodule_provid",{"_index":414,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["code",{"_index":629,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["comment",{"_index":765,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":421,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["compil",{"_index":241,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["complet",{"_index":609,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["compon",{"_index":90,"title":{"components/MatKeyboardContainerComponent.html":{}},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"overview.html":{}}}],["component_templ",{"_index":313,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["componentport",{"_index":176,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["componentportal(matkeyboardcompon",{"_index":646,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["componentportal(matkeyboardcontainercompon",{"_index":638,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["componentref",{"_index":181,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["components/keyboard",{"_index":449,"title":{},"body":{"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["components/keyboard/keyboard.compon",{"_index":357,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["config",{"_index":438,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["config.announcementmessag",{"_index":618,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["config.darkthem",{"_index":592,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["config.isdebug",{"_index":594,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["config.polit",{"_index":620,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["config.viewcontainerref",{"_index":639,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["configs.dur",{"_index":614,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["configs/keyboard",{"_index":441,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{}}}],["configs/keyboard.config",{"_index":224,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["configur",{"_index":269,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["connect",{"_index":378,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["const",{"_index":242,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["constant",{"_index":231,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["constructor(_elementref",{"_index":332,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["constructor(_ngzon",{"_index":139,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["constructor(_overlay",{"_index":517,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["constructor(inst",{"_index":469,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["constructor(priv",{"_index":270,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"injectables/MatKeyboardService.html":{}}}],["contain",{"_index":84,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["container'},{'nam",{"_index":316,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.attachcomponentportal(port",{"_index":648,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["container.compon",{"_index":450,"title":{},"body":{"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["container.component.html",{"_index":118,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.scss",{"_index":116,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.t",{"_index":97,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:115",{"_index":184,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:123",{"_index":187,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:131",{"_index":191,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:140",{"_index":163,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:47",{"_index":197,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:51",{"_index":202,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:55",{"_index":148,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:58",{"_index":211,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:61",{"_index":208,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:64",{"_index":151,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:67",{"_index":143,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:75",{"_index":162,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:80",{"_index":177,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:89",{"_index":182,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container.component.ts:95",{"_index":156,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["container/keyboard",{"_index":96,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["containerinst",{"_index":463,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["containerinstance.onexit.subscrib",{"_index":490,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["containerport",{"_index":637,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["containerref",{"_index":640,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["containerref.inst",{"_index":643,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["containerref.instance.keyboardconfig",{"_index":642,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["content",{"_index":103,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["contentref",{"_index":647,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["contribut",{"_index":776,"title":{},"body":{"index.html":{}}}],["control",{"_index":370,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["core",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":531,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["counter",{"_index":603,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["countri",{"_index":624,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["creat",{"_index":530,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["css",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":534,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["custom",{"_index":549,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["customlayout",{"_index":779,"title":{},"body":{"index.html":{}}}],["dark",{"_index":62,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["darkthem",{"_index":47,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["de",{"_index":783,"title":{},"body":{"index.html":{}}}],["deadkey",{"_index":8,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["deadkey.config",{"_index":442,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["deadkeys.interface.t",{"_index":6,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["deadkeys.interface.ts:1",{"_index":13,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["debug",{"_index":76,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["declar",{"_index":409,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["decor",{"_index":200,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["default",{"_index":53,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["defin",{"_index":12,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["deleg",{"_index":556,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["demo",{"_index":728,"title":{},"body":{"index.html":{}}}],["depend",{"_index":408,"title":{"dependencies.html":{}},"body":{"modules/MatKeyboardModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deriev",{"_index":754,"title":{},"body":{"index.html":{}}}],["deriv",{"_index":766,"title":{},"body":{"index.html":{}}}],["descript",{"_index":98,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["design",{"_index":504,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["destroy",{"_index":196,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["detail",{"_index":633,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["develop",{"_index":785,"title":{},"body":{"index.html":{}}}],["direct",{"_index":311,"title":{"directives/MatKeyboardDirective.html":{}},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["directives/keyboard.direct",{"_index":453,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["directli",{"_index":759,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":72,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["dispatch",{"_index":459,"title":{},"body":{"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["doc",{"_index":249,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["document",{"_index":730,"title":{},"body":{"index.html":{}}}],["dom",{"_index":93,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["durat",{"_index":48,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["dynam",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":743,"title":{},"body":{"index.html":{}}}],["earli",{"_index":721,"title":{},"body":{"index.html":{}}}],["element",{"_index":167,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"index.html":{}}}],["elementref",{"_index":333,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["embeddedviewref",{"_index":183,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["enabl",{"_index":61,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["end",{"_index":158,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["enter",{"_index":129,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["enterclick",{"_index":329,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["entranc",{"_index":186,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["entrycompon",{"_index":419,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["enumer",{"_index":686,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/keyboard",{"_index":31,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"components/MatKeyboardContainerComponent.html":{}}}],["error",{"_index":170,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["error('attempt",{"_index":277,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["error('not",{"_index":280,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["error(`no",{"_index":634,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["event",{"_index":153,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["event.preventdefault",{"_index":274,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["eventemitt",{"_index":345,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["exampl",{"_index":108,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["exit",{"_index":130,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["export",{"_index":14,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":104,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["extern",{"_index":420,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["extra",{"_index":550,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["fals",{"_index":74,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"pipes/MatKeyboardKebabCasePipe.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["finish",{"_index":210,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["first",{"_index":305,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["flow",{"_index":794,"title":{},"body":{"index.html":{}}}],["focu",{"_index":331,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["formsmodul",{"_index":746,"title":{},"body":{"index.html":{}}}],["found",{"_index":635,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["fromstat",{"_index":283,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["fulfil",{"_index":739,"title":{},"body":{"index.html":{}}}],["function",{"_index":708,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["futur",{"_index":770,"title":{},"body":{"index.html":{}}}],["gener",{"_index":729,"title":{},"body":{"index.html":{}}}],["get",{"_index":484,"title":{"index.html":{}},"body":{"classes/MatKeyboardRef.html":{},"index.html":{}}}],["get_openedkeyboardref",{"_index":558,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["getavailablelocal",{"_index":562,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["getisopen",{"_index":564,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["getlayoutforlocal",{"_index":510,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["getlayoutforlocale(local",{"_index":535,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["git",{"_index":793,"title":{},"body":{"index.html":{}}}],["given",{"_index":371,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"injectables/MatKeyboardService.html":{}}}],["global",{"_index":655,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["great",{"_index":775,"title":{},"body":{"index.html":{}}}],["greywyvern",{"_index":761,"title":{},"body":{"index.html":{}}}],["hammerj",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":157,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["hasn't",{"_index":606,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["help",{"_index":168,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["here",{"_index":233,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["hidden",{"_index":255,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hide",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hide_anim",{"_index":246,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["hostbind",{"_index":132,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["hostbinding('@st",{"_index":265,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["hostbinding('attr.rol",{"_index":267,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["hostlisten",{"_index":135,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["hostlistener('@state.don",{"_index":281,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["hostlistener('blur",{"_index":387,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["hostlistener('focu",{"_index":360,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["hostlistener('mousedown",{"_index":272,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["html",{"_index":310,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["huge",{"_index":772,"title":{},"body":{"index.html":{}}}],["icons.config",{"_index":445,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["icons.interface.t",{"_index":20,"title":{},"body":{"interfaces/IKeyboardIcons.html":{}}}],["icons.interface.ts:1",{"_index":22,"title":{},"body":{"interfaces/IKeyboardIcons.html":{}}}],["ikeyboarddeadkey",{"_index":1,"title":{"interfaces/IKeyboardDeadkeys.html":{}},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["ikeyboardicon",{"_index":19,"title":{"interfaces/IKeyboardIcons.html":{}},"body":{"interfaces/IKeyboardIcons.html":{}}}],["ikeyboardlayout",{"_index":23,"title":{"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{}},"body":{"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["ilocalemap",{"_index":39,"title":{"interfaces/ILocaleMap.html":{}},"body":{"interfaces/ILocaleMap.html":{},"injectables/MatKeyboardService.html":{}}}],["implement",{"_index":106,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{}}}],["import",{"_index":29,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["inherit",{"_index":760,"title":{},"body":{"index.html":{}}}],["inject",{"_index":502,"title":{"injectables/MatKeyboardService.html":{}},"body":{"injectables/MatKeyboardService.html":{},"index.html":{},"overview.html":{}}}],["inject(locale_id",{"_index":583,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["inject(mat_keyboard_layout",{"_index":584,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["injector",{"_index":553,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["input",{"_index":324,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"index.html":{}}}],["input[matkeyboard",{"_index":319,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["insid",{"_index":204,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["instal",{"_index":731,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":464,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{}},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"overview.html":{}}}],["interfaces/keyboard",{"_index":569,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["interfaces/local",{"_index":571,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["intern",{"_index":99,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["interpol",{"_index":235,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["invok",{"_index":195,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["isdebug",{"_index":49,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["isopen",{"_index":516,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["js",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":21,"title":{},"body":{"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["key.compon",{"_index":452,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["key.enum",{"_index":33,"title":{},"body":{"interfaces/IKeyboardLayout.html":{}}}],["key.enum.t",{"_index":690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key/keyboard",{"_index":451,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["keyboard",{"_index":37,"title":{},"body":{"interfaces/IKeyboardLayouts.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["keyboard'},{'nam",{"_index":315,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["keyboard/cor",{"_index":738,"title":{},"body":{"index.html":{}}}],["keyboardanimationst",{"_index":146,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardanimationstate.hidden",{"_index":300,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["keyboardanimationstate.vis",{"_index":287,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["keyboardanimationstate.void",{"_index":147,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["keyboardanimationtransit",{"_index":226,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardclasskey",{"_index":30,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardconfig",{"_index":122,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["keyboarddeadkey",{"_index":439,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["keyboardicon",{"_index":443,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["keyboardlayout",{"_index":446,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{}}}],["keyboardmodifi",{"_index":691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["keyboardref",{"_index":589,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.afteropened().subscrib",{"_index":615,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.containerinstance.ent",{"_index":610,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.dismiss",{"_index":617,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.instance.darkthem",{"_index":591,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.instance.isdebug",{"_index":593,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.instance.layout",{"_index":597,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["keyboardref.instance.local",{"_index":596,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["lang",{"_index":27,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"index.html":{}}}],["lay",{"_index":787,"title":{},"body":{"index.html":{}}}],["layout",{"_index":35,"title":{},"body":{"interfaces/IKeyboardLayouts.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["layout.interfac",{"_index":38,"title":{},"body":{"interfaces/IKeyboardLayouts.html":{},"injectables/MatKeyboardService.html":{}}}],["layout.interface.t",{"_index":24,"title":{},"body":{"interfaces/IKeyboardLayout.html":{}}}],["layoutorlocal",{"_index":544,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["layouts.config",{"_index":448,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{}}}],["layouts.interfac",{"_index":570,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["layouts.interface.t",{"_index":34,"title":{},"body":{"interfaces/IKeyboardLayouts.html":{}}}],["layouts.interface.ts:3",{"_index":36,"title":{},"body":{"interfaces/IKeyboardLayouts.html":{}}}],["leak",{"_index":292,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["legend",{"_index":309,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["length",{"_index":66,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["level",{"_index":82,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["liter",{"_index":10,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["live_announcer_provid",{"_index":426,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["liveannounc",{"_index":519,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["load",{"_index":205,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["local",{"_index":42,"title":{},"body":{"interfaces/ILocaleMap.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["locale_id",{"_index":567,"title":{},"body":{"injectables/MatKeyboardService.html":{},"index.html":{}}}],["locat",{"_index":532,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["look",{"_index":632,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["lower",{"_index":602,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["läyout",{"_index":781,"title":{},"body":{"index.html":{}}}],["make",{"_index":192,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["manag",{"_index":734,"title":{},"body":{"index.html":{}}}],["map",{"_index":539,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["map.interfac",{"_index":572,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["map.interface.t",{"_index":41,"title":{},"body":{"interfaces/ILocaleMap.html":{}}}],["map.interface.ts:1",{"_index":43,"title":{},"body":{"interfaces/ILocaleMap.html":{}}}],["maplocal",{"_index":511,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["maplocale(local",{"_index":537,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["mark",{"_index":482,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["mat",{"_index":114,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["mat_keyboard_deadkey",{"_index":440,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["mat_keyboard_icon",{"_index":444,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["mat_keyboard_layout",{"_index":447,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["matarialiveannounc",{"_index":58,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["matbuttonmodul",{"_index":432,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{}}}],["match",{"_index":18,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matcommonmodul",{"_index":431,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["materi",{"_index":430,"title":{},"body":{"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["maticonmodul",{"_index":434,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["matinputmodul",{"_index":436,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["matkeyboard",{"_index":325,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["matkeyboardcompon",{"_index":314,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"overview.html":{}}}],["matkeyboardconfig",{"_index":44,"title":{"classes/MatKeyboardConfig.html":{}},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["matkeyboardcontainercompon",{"_index":91,"title":{"components/MatKeyboardContainerComponent.html":{}},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"overview.html":{}}}],["matkeyboarddirect",{"_index":318,"title":{"directives/MatKeyboardDirective.html":{}},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["matkeyboarddirective`][docs:matkeyboarddirect",{"_index":752,"title":{},"body":{"index.html":{}}}],["matkeyboardkebabcas",{"_index":394,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["matkeyboardkebabcasepip",{"_index":391,"title":{"pipes/MatKeyboardKebabCasePipe.html":{}},"body":{"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["matkeyboardkeycompon",{"_index":317,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"overview.html":{}}}],["matkeyboardmodul",{"_index":407,"title":{"modules/MatKeyboardModule.html":{}},"body":{"modules/MatKeyboardModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["matkeyboardref",{"_index":352,"title":{"classes/MatKeyboardRef.html":{}},"body":{"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["matkeyboardref(contentref.inst",{"_index":649,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["matkeyboardservic",{"_index":335,"title":{"injectables/MatKeyboardService.html":{}},"body":{"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"overview.html":{}}}],["memori",{"_index":291,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["messag",{"_index":56,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{}}}],["method",{"_index":125,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["middl",{"_index":172,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["millisecond",{"_index":68,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["miscellan",{"_index":685,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["model",{"_index":796,"title":{},"body":{"index.html":{}}}],["modifier.enum.t",{"_index":692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["modul",{"_index":406,"title":{"modules/MatKeyboardModule.html":{},"modules.html":{}},"body":{"modules/MatKeyboardModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":137,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["mousedown(ev",{"_index":160,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["mouseev",{"_index":161,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["near",{"_index":769,"title":{},"body":{"index.html":{}}}],["new",{"_index":207,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["newer",{"_index":608,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["ng",{"_index":788,"title":{},"body":{"index.html":{}}}],["ngc",{"_index":239,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["ngcontrol",{"_index":50,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["ngmodul",{"_index":423,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":131,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["ngx",{"_index":715,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":140,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["non",{"_index":374,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["none",{"_index":706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":288,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["notifi",{"_index":209,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["now",{"_index":771,"title":{},"body":{"index.html":{}}}],["npm",{"_index":736,"title":{},"body":{"index.html":{}}}],["null",{"_index":59,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["number",{"_index":63,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{}}}],["observ",{"_index":190,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["on",{"_index":724,"title":{},"body":{"index.html":{}}}],["onanimationend(ev",{"_index":282,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["ondestroy",{"_index":107,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["onent",{"_index":123,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["onenter.complet",{"_index":296,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["onenter.next",{"_index":295,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["onexit",{"_index":124,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["onmousedown(ev",{"_index":273,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["onscreen",{"_index":716,"title":{},"body":{"index.html":{}}}],["open",{"_index":476,"title":{},"body":{"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["open(layoutorlocal",{"_index":541,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["openfromcompon",{"_index":512,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["openfromcomponent(layoutorlocal",{"_index":547,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["oper",{"_index":555,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["option",{"_index":26,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":767,"title":{},"body":{"index.html":{}}}],["out",{"_index":417,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":203,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["output",{"_index":326,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["overlay",{"_index":86,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["overlayconfig",{"_index":566,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["overlaymodul",{"_index":427,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["overlayref",{"_index":471,"title":{},"body":{"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["overlayref.attach(containerport",{"_index":641,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["overview",{"_index":800,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":659,"title":{"dependencies.html":{}},"body":{}}],["packagr",{"_index":789,"title":{},"body":{"index.html":{}}}],["packet",{"_index":733,"title":{},"body":{"index.html":{}}}],["param",{"_index":588,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["paramet",{"_index":144,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":554,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["parent._openedkeyboardref",{"_index":577,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["part",{"_index":628,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["particular",{"_index":741,"title":{},"body":{"index.html":{}}}],["peer",{"_index":740,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":390,"title":{"pipes/MatKeyboardKebabCasePipe.html":{}},"body":{"pipes/MatKeyboardKebabCasePipe.html":{},"overview.html":{}}}],["pipes/kebab",{"_index":454,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["pipetransform",{"_index":397,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["place",{"_index":85,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"injectables/MatKeyboardService.html":{}}}],["pleas",{"_index":718,"title":{},"body":{"index.html":{}}}],["polit",{"_index":51,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["portal",{"_index":180,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["portalmodul",{"_index":429,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["posit",{"_index":654,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["prefer",{"_index":732,"title":{},"body":{"index.html":{}}}],["prepar",{"_index":585,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["preservewhitespac",{"_index":112,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["prevent",{"_index":169,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["privat",{"_index":119,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["product",{"_index":726,"title":{},"body":{"index.html":{}}}],["project",{"_index":719,"title":{},"body":{"index.html":{}}}],["properti",{"_index":25,"title":{},"body":{"interfaces/IKeyboardLayout.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["provid",{"_index":102,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"modules/MatKeyboardModule.html":{},"injectables/MatKeyboardService.html":{},"index.html":{},"overview.html":{}}}],["pure",{"_index":398,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["rang",{"_index":773,"title":{},"body":{"index.html":{}}}],["read",{"_index":757,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":487,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref",{"_index":605,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["ref.class",{"_index":356,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"injectables/MatKeyboardService.html":{}}}],["ref.class.t",{"_index":458,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:15",{"_index":473,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:18",{"_index":475,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:21",{"_index":478,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:24",{"_index":472,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:38",{"_index":486,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:45",{"_index":481,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:53",{"_index":483,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:58",{"_index":485,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["ref.class.ts:63",{"_index":479,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["refer",{"_index":367,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["refrain",{"_index":725,"title":{},"body":{"index.html":{}}}],["remov",{"_index":166,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["replac",{"_index":607,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["replace(/\\s+/g",{"_index":404,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["repositori",{"_index":786,"title":{},"body":{"index.html":{}}}],["repres",{"_index":545,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["reset",{"_index":416,"title":{},"body":{"modules/MatKeyboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["result",{"_index":17,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":173,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["rxj",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/first",{"_index":223,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["rxjs/observ",{"_index":221,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["rxjs/subject",{"_index":222,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["save",{"_index":737,"title":{},"body":{"index.html":{}}}],["search",{"_index":627,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["see",{"_index":764,"title":{},"body":{"index.html":{}}}],["selector",{"_index":113,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["self",{"_index":354,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["semver",{"_index":792,"title":{},"body":{"index.html":{}}}],["servic",{"_index":460,"title":{},"body":{"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["services/keyboard.servic",{"_index":358,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"modules/MatKeyboardModule.html":{}}}],["set",{"_index":369,"title":{},"body":{"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["set_openedkeyboardref(valu",{"_index":560,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["settimeout",{"_index":616,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["settl",{"_index":165,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["shift",{"_index":626,"title":{},"body":{"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["shiftalt",{"_index":707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shiftclick",{"_index":330,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["shouldn't",{"_index":289,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["show",{"_index":695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["show_anim",{"_index":243,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["skipself",{"_index":568,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["smth",{"_index":373,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["snack",{"_index":188,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"modules/MatKeyboardModule.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["space",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["split",{"_index":625,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/.../keyboard",{"_index":687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keyboard.utils.t",{"_index":709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/core/src/classes/keyboard",{"_index":457,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["src/core/src/components/keyboard",{"_index":95,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["src/core/src/configs/keyboard.config.t",{"_index":45,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:10",{"_index":55,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:13",{"_index":83,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:16",{"_index":65,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:19",{"_index":60,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:22",{"_index":75,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:25",{"_index":78,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/configs/keyboard.config.ts:7",{"_index":81,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["src/core/src/directives/keyboard.directive.t",{"_index":322,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:13",{"_index":353,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:15",{"_index":344,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:17",{"_index":341,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:19",{"_index":342,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:21",{"_index":343,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:23",{"_index":348,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:25",{"_index":347,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:27",{"_index":346,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:29",{"_index":337,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:35",{"_index":351,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:40",{"_index":350,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/directives/keyboard.directive.ts:63",{"_index":349,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["src/core/src/enums/keyboard",{"_index":693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/src/interfaces/keyboard",{"_index":5,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{}}}],["src/core/src/interfaces/local",{"_index":40,"title":{},"body":{"interfaces/ILocaleMap.html":{}}}],["src/core/src/keyboard.module.t",{"_index":418,"title":{},"body":{"modules/MatKeyboardModule.html":{}}}],["src/core/src/pipes/kebab",{"_index":392,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["src/core/src/services/keyboard.service.t",{"_index":503,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:130",{"_index":542,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:139",{"_index":533,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:149",{"_index":538,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:173",{"_index":536,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:180",{"_index":526,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:193",{"_index":528,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:204",{"_index":529,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:26",{"_index":552,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:28",{"_index":551,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:31",{"_index":559,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:36",{"_index":561,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:44",{"_index":563,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:48",{"_index":565,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:50",{"_index":523,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/services/keyboard.service.ts:68",{"_index":548,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["src/core/src/utils/keyboard.utils.t",{"_index":710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["stage",{"_index":722,"title":{},"body":{"index.html":{}}}],["start",{"_index":714,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":133,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["state('vis",{"_index":251,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["state(`${keyboardanimationstate.vis",{"_index":260,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["state.don",{"_index":136,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["state.done(ev",{"_index":154,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["state.enum",{"_index":225,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["state.enum.t",{"_index":688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.positionstrategi",{"_index":652,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["static",{"_index":238,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["string",{"_index":9,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardIcons.html":{},"interfaces/IKeyboardLayout.html":{},"interfaces/IKeyboardLayouts.html":{},"interfaces/ILocaleMap.html":{},"classes/MatKeyboardConfig.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"injectables/MatKeyboardService.html":{}}}],["structur",{"_index":763,"title":{},"body":{"index.html":{}}}],["style",{"_index":212,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["style({transform",{"_index":252,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["styleurl",{"_index":115,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["subject",{"_index":206,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["subscrib",{"_index":306,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["super",{"_index":271,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["support",{"_index":797,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":193,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"index.html":{}}}],["svg",{"_index":798,"title":{},"body":{"modules.html":{}}}],["t",{"_index":178,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["tab",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["target",{"_index":16,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{}}}],["templat",{"_index":92,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["templateurl",{"_index":117,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["text",{"_index":234,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["textarea",{"_index":753,"title":{},"body":{"index.html":{}}}],["textarea[matkeyboard",{"_index":320,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{}}}],["therefor",{"_index":723,"title":{},"body":{"index.html":{}}}],["this._afterclosed.asobserv",{"_index":497,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afterclosed.clos",{"_index":492,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afterclosed.complet",{"_index":501,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afterclosed.next",{"_index":500,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afteropened.clos",{"_index":494,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afteropened.complet",{"_index":496,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._afteropened.next",{"_index":495,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._animationst",{"_index":298,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._attachkeyboardcontainer(overlayref",{"_index":645,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._attachkeyboardcontent(config",{"_index":590,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._availablelocal",{"_index":581,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._changedetectorref.detectchang",{"_index":299,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._completeexit",{"_index":286,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._control",{"_index":376,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._createoverlay",{"_index":644,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._defaultlocal",{"_index":540,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._destroy",{"_index":297,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._finishdismiss",{"_index":491,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._hidekeyboard",{"_index":359,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref",{"_index":362,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.dismiss",{"_index":389,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.altclick.subscrib",{"_index":383,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.attachcontrol(this._control.control",{"_index":377,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.capsclick.subscrib",{"_index":381,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.enterclick.subscrib",{"_index":379,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.setinputinstance(this._elementref",{"_index":368,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardref.instance.shiftclick.subscrib",{"_index":385,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._keyboardrefatthislevel",{"_index":578,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._keyboardservice.open(this.matkeyboard",{"_index":363,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this._layouts[layoutorlocal",{"_index":599,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._layouts[layoutorlocale].lang",{"_index":600,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._layouts[layoutorlocale].lang.pop",{"_index":601,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._layouts[this.maplocale(local",{"_index":636,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._live.announce(config.announcementmessag",{"_index":619,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._ngzone.onmicrotaskempti",{"_index":303,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._ngzone.run",{"_index":294,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._openedkeyboardref",{"_index":582,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._openedkeyboardref.dismiss",{"_index":611,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._overlay",{"_index":653,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._overlay.create(st",{"_index":658,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._overlayref.dispos",{"_index":499,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this._parentkeyboard",{"_index":576,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._parentkeyboard._openedkeyboardref",{"_index":580,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this._portaloutlet.attachcomponentportal(port",{"_index":279,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this._portaloutlet.hasattach",{"_index":275,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this.altclick.next",{"_index":384,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.availablelocales[countri",{"_index":630,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this.availablelocales[layoutorlocal",{"_index":595,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this.availablelocales[local",{"_index":631,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this.capsclick.next",{"_index":382,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.containerinst",{"_index":489,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this.containerinstance.exit",{"_index":493,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this.containerinstance.onent",{"_index":498,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this.darkthem",{"_index":364,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.dur",{"_index":365,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.enterclick.next",{"_index":380,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.getlayoutforlocale(layoutorlocal",{"_index":598,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this.inst",{"_index":488,"title":{},"body":{"classes/MatKeyboardRef.html":{}}}],["this.isdebug",{"_index":366,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["this.onent",{"_index":293,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this.onexit",{"_index":301,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this.onexit.complet",{"_index":308,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this.onexit.next",{"_index":307,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["this.openfromcomponent(layoutorlocal",{"_index":623,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["this.shiftclick.next",{"_index":386,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["throw",{"_index":276,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["time",{"_index":67,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["timeout",{"_index":612,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["todo",{"_index":228,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["token",{"_index":756,"title":{},"body":{"index.html":{}}}],["tolowercas",{"_index":405,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["tostat",{"_index":284,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["tostate.startswith('hidden",{"_index":285,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transform",{"_index":261,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"pipes/MatKeyboardKebabCasePipe.html":{}}}],["transform(valu",{"_index":395,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["transit",{"_index":213,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition('vis",{"_index":254,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition('void",{"_index":257,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition(`${keyboardanimationtransition.hid",{"_index":262,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition(`${keyboardanimationtransition.show",{"_index":263,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition.enum",{"_index":227,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["transition.enum.t",{"_index":689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["translatey(0",{"_index":253,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["tree",{"_index":94,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["trigger",{"_index":214,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["trigger('st",{"_index":250,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["true",{"_index":302,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/IKeyboardDeadkeys.html":{},"interfaces/IKeyboardLayout.html":{},"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["typescript",{"_index":745,"title":{},"body":{"index.html":{}}}],["tölle",{"_index":780,"title":{},"body":{"index.html":{}}}],["undefin",{"_index":712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["understand",{"_index":758,"title":{},"body":{"index.html":{}}}],["up",{"_index":171,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{}}}],["updat",{"_index":159,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["us",{"_index":230,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"index.html":{}}}],["usabl",{"_index":774,"title":{},"body":{"index.html":{}}}],["usag",{"_index":727,"title":{},"body":{"index.html":{}}}],["user",{"_index":101,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"classes/MatKeyboardRef.html":{}}}],["usevalu",{"_index":456,"title":{},"body":{"modules/MatKeyboardModule.html":{},"index.html":{}}}],["utils/keyboard.util",{"_index":575,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["valu",{"_index":54,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"pipes/MatKeyboardKebabCasePipe.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace(/([a",{"_index":399,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["var",{"_index":312,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["veri",{"_index":720,"title":{},"body":{"index.html":{}}}],["version",{"_index":790,"title":{},"body":{"index.html":{}}}],["via",{"_index":557,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["view",{"_index":77,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{}}}],["viewchild",{"_index":201,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["viewchild(cdkportaloutlet",{"_index":264,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["viewcontainerref",{"_index":52,"title":{},"body":{"classes/MatKeyboardConfig.html":{}}}],["virtual",{"_index":717,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":258,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["vki",{"_index":762,"title":{},"body":{"index.html":{}}}],["void",{"_index":174,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{},"directives/MatKeyboardDirective.html":{},"classes/MatKeyboardRef.html":{},"injectables/MatKeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["wait",{"_index":69,"title":{},"body":{"classes/MatKeyboardConfig.html":{},"components/MatKeyboardContainerComponent.html":{}}}],["we'r",{"_index":735,"title":{},"body":{"index.html":{}}}],["web",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["whether",{"_index":198,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["width",{"_index":650,"title":{},"body":{"injectables/MatKeyboardService.html":{}}}],["wrap",{"_index":100,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["ye",{"_index":339,"title":{},"body":{"directives/MatKeyboardDirective.html":{}}}],["z])([a",{"_index":400,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["z])/g",{"_index":401,"title":{},"body":{"pipes/MatKeyboardKebabCasePipe.html":{}}}],["zone",{"_index":164,"title":{},"body":{"components/MatKeyboardContainerComponent.html":{}}}],["zone.j",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":415,"title":{},"body":{"modules/MatKeyboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/IKeyboardDeadkeys.html":{"url":"interfaces/IKeyboardDeadkeys.html","title":"interface - IKeyboardDeadkeys","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyboardDeadkeys\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/interfaces/keyboard-deadkeys.interface.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [deadkey: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/core/src/interfaces/keyboard-deadkeys.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyboardDeadkeys {\n  [deadkey: string]: {\n    [target: string]: string;\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyboardIcons.html":{"url":"interfaces/IKeyboardIcons.html","title":"interface - IKeyboardIcons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyboardIcons\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/interfaces/keyboard-icons.interface.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/core/src/interfaces/keyboard-icons.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IKeyboardIcons {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyboardLayout.html":{"url":"interfaces/IKeyboardLayout.html","title":"interface - IKeyboardLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyboardLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/interfaces/keyboard-layout.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        keys\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                    \n                                \n                                \n                                    \n                                        keys:     [][][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [][][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { KeyboardClassKey } from '../enums/keyboard-class-key.enum';\n\nexport interface IKeyboardLayout {\n  name: string;\n  keys: (string | KeyboardClassKey)[][][];\n  lang?: string[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyboardLayouts.html":{"url":"interfaces/IKeyboardLayouts.html","title":"interface - IKeyboardLayouts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyboardLayouts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/interfaces/keyboard-layouts.interface.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [layout: string]:    IKeyboardLayout\n\n                    \n                \n                        \n                            \n                                Defined in src/core/src/interfaces/keyboard-layouts.interface.ts:3\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { IKeyboardLayout } from './keyboard-layout.interface';\n\nexport interface IKeyboardLayouts {\n  [layout: string]: IKeyboardLayout;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILocaleMap.html":{"url":"interfaces/ILocaleMap.html","title":"interface - ILocaleMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILocaleMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/interfaces/locale-map.interface.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [locale: string]:    string\n\n                    \n                \n                        \n                            \n                                Defined in src/core/src/interfaces/locale-map.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface ILocaleMap {\n  [locale: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatKeyboardConfig.html":{"url":"classes/MatKeyboardConfig.html","title":"class - MatKeyboardConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatKeyboardConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/configs/keyboard.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                announcementMessage\n                            \n                            \n                                    Optional\n                                darkTheme\n                            \n                            \n                                    Optional\n                                duration\n                            \n                            \n                                    Optional\n                                isDebug\n                            \n                            \n                                    Optional\n                                ngControl\n                            \n                            \n                                    Optional\n                                politeness\n                            \n                            \n                                    Optional\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            announcementMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        announcementMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:10\n                            \n                        \n\n                \n                    \n                        Message to be announced by the MatAriaLiveAnnouncer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            darkTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        darkTheme:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:19\n                            \n                        \n\n                \n                    \n                        Enable a dark keyboard *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:16\n                            \n                        \n\n                \n                    \n                        The length of time in milliseconds to wait before automatically dismissing the keyboard after blur. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isDebug\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDebug:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:22\n                            \n                        \n\n                \n                    \n                        Enable the debug view *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ngControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ngControl:     NgControl\n\n                    \n                \n                    \n                        \n                            Type :     NgControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:25\n                            \n                        \n\n                \n                    \n                        Enable the debug view *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            politeness\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        politeness:     AriaLivePoliteness\n\n                    \n                \n                    \n                        \n                            Type :     AriaLivePoliteness\n\n                        \n                    \n                    \n                        \n                            Default value : 'assertive'\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:7\n                            \n                        \n\n                \n                    \n                        The politeness level for the MatAriaLiveAnnouncer announcement. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/configs/keyboard.config.ts:13\n                            \n                        \n\n                \n                    \n                        The view container to place the overlay for the keyboard into. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { AriaLivePoliteness } from '@angular/cdk/a11y';\n\nexport class MatKeyboardConfig {\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n  politeness?: AriaLivePoliteness = 'assertive';\n\n  /** Message to be announced by the MatAriaLiveAnnouncer */\n  announcementMessage? = '';\n\n  /** The view container to place the overlay for the keyboard into. */\n  viewContainerRef?: ViewContainerRef = null;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the keyboard after blur. */\n  duration? = 0;\n\n  /** Enable a dark keyboard **/\n  darkTheme? = null;\n\n  /** Enable the debug view **/\n  isDebug? = false;\n\n  /** Enable the debug view **/\n  ngControl?: NgControl;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MatKeyboardContainerComponent.html":{"url":"components/MatKeyboardContainerComponent.html","title":"component - MatKeyboardContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MatKeyboardContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/src/components/keyboard-container/keyboard-container.component.ts\n\n\n    \n        Description\n    \n    \n        Internal component that wraps user-provided keyboard content.\n\n    \n\n    \n        Extends\n    \n    \n            BasePortalOutlet\n    \n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                mat-keyboard-container\n            \n\n            \n                styleUrls\n                keyboard-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./keyboard-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _destroyed\n                            \n                            \n                                    Private\n                                _portalOutlet\n                            \n                            \n                                keyboardConfig\n                            \n                            \n                                onEnter\n                            \n                            \n                                onExit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _completeExit\n                            \n                            \n                                attachComponentPortal\n                            \n                            \n                                attachTemplatePortal\n                            \n                            \n                                enter\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @state\n                            \n                            \n                                attr.role\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                @state.done\n                            \n                            \n                                mousedown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngZone: NgZone, _changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @state:     KeyboardAnimationState\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardAnimationState\n\n                        \n                    \n                    \n                        \n                            Default value : KeyboardAnimationState.Void\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:55\n                            \n                        \n\n                \n                    \n                        The state of the keyboard animations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attr.role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attr.role:     \n\n                    \n                \n                    \n                        \n                            Default value : 'alert'\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:64\n                            \n                        \n\n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            @state.done\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \n@state.done(event: AnimationEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:95\n                            \n                        \n\n\n                \n                    \n                            Handle end of animations, updating the state of the keyboard. \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mousedown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nmousedown(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _completeExit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _completeExit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:140\n                            \n                        \n\n\n                \n                    \n                            Waits for the zone to settle before removing the element. Helps prevent\nerrors where we end up removing an element which is in the middle of an animation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachComponentPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachComponentPortal(portal: ComponentPortal)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:80\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n                            Attach a component portal as content to this keyboard container. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portal\n                                                        \n                                                                    ComponentPortal\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachTemplatePortal\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachTemplatePortal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     EmbeddedViewRef\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enter\n                            \n                            \n                        \n                    \n                \n                \n                    \nenter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Begin animation of keyboard entrance into view. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Begin animation of the snack bar exiting from view. \n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Makes sure the exit callbacks have been invoked when the element is destroyed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _destroyed:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:47\n                            \n                        \n\n                \n                    \n                        Whether the component has been destroyed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _portalOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _portalOutlet:     CdkPortalOutlet\n\n                    \n                \n                    \n                        \n                            Type :     CdkPortalOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:51\n                            \n                        \n\n                \n                    \n                        The portal outlet inside of this container into which the keyboard content will be loaded. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keyboardConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyboardConfig:     MatKeyboardConfig\n\n                    \n                \n                    \n                        \n                            Type :     MatKeyboardConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onEnter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:61\n                            \n                        \n\n                \n                    \n                        Subject for notifying that the keyboard has finished entering the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onExit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onExit:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/components/keyboard-container/keyboard-container.component.ts:58\n                            \n                        \n\n                \n                    \n                        Subject for notifying that the keyboard has exited from view. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal } from '@angular/cdk/portal';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentRef, EmbeddedViewRef, HostBinding, HostListener, NgZone, OnDestroy, ViewChild } from '@angular/core';\nimport { AnimationCurves, AnimationDurations } from '@angular/material/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/first';\n\nimport { MatKeyboardConfig } from '../../configs/keyboard.config';\nimport { KeyboardAnimationState } from '../../enums/keyboard-animation-state.enum';\nimport { KeyboardAnimationTransition } from '../../enums/keyboard-animation-transition.enum';\n\n// TODO: we can't use constants from animation.ts here because you can't use\n// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\nexport const SHOW_ANIMATION = `${AnimationDurations.ENTERING} ${AnimationCurves.DECELERATION_CURVE}`;\nexport const HIDE_ANIMATION = `${AnimationDurations.EXITING} ${AnimationCurves.ACCELERATION_CURVE}`;\n\n/**\n * Internal component that wraps user-provided keyboard content.\n * @docs-private\n */\n@Component({\n  selector: 'mat-keyboard-container',\n  templateUrl: './keyboard-container.component.html',\n  styleUrls: ['./keyboard-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  // animations: [\n  //   trigger('state', [\n  //     state('visible', style({transform: 'translateY(0%)'})),\n  //     transition('visible => hidden', animate(HIDE_ANIMATION)),\n  //     transition('void => visible', animate(SHOW_ANIMATION)),\n  //   ])\n  // ]\n  animations: [\n    trigger('state', [\n      state(`${KeyboardAnimationState.Visible}`, style({ transform: 'translateY(0%)' })),\n      transition(`${KeyboardAnimationTransition.Hide}`, animate(HIDE_ANIMATION)),\n      transition(`${KeyboardAnimationTransition.Show}`, animate(SHOW_ANIMATION))\n    ])\n  ]\n})\nexport class MatKeyboardContainerComponent extends BasePortalOutlet implements OnDestroy {\n\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the keyboard content will be loaded. */\n  @ViewChild(CdkPortalOutlet)\n  private _portalOutlet: CdkPortalOutlet;\n\n  /** The state of the keyboard animations. */\n  @HostBinding('@state')\n  private _animationState: KeyboardAnimationState = KeyboardAnimationState.Void;\n\n  /** Subject for notifying that the keyboard has exited from view. */\n  onExit: Subject = new Subject();\n\n  /** Subject for notifying that the keyboard has finished entering the view. */\n  onEnter: Subject = new Subject();\n\n  @HostBinding('attr.role')\n  attrRole = 'alert';\n\n  // the keyboard configuration\n  keyboardConfig: MatKeyboardConfig;\n\n  constructor(private _ngZone: NgZone,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  /** Attach a component portal as content to this keyboard container. */\n  attachComponentPortal(portal: ComponentPortal): ComponentRef {\n    if (this._portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach keyboard content after content is already attached');\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  // Attach a template portal as content to this keyboard container\n  attachTemplatePortal(): EmbeddedViewRef {\n    throw Error('Not yet implemented');\n  }\n\n  /** Handle end of animations, updating the state of the keyboard. */\n  @HostListener('@state.done', ['$event'])\n  onAnimationEnd(event: AnimationEvent) {\n    const { fromState, toState } = event;\n\n    if ((toState === KeyboardAnimationState.Void && fromState !== KeyboardAnimationState.Void) || toState.startsWith('hidden')) {\n      this._completeExit();\n    }\n\n    if (toState === KeyboardAnimationState.Visible) {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this.onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  /** Begin animation of keyboard entrance into view. */\n  enter() {\n    if (!this._destroyed) {\n      this._animationState = KeyboardAnimationState.Visible;\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the snack bar exiting from view. */\n  exit(): Observable {\n    this._animationState = KeyboardAnimationState.Hidden;\n    return this.onExit;\n  }\n\n  /**\n   * Makes sure the exit callbacks have been invoked when the element is destroyed.\n   */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  /**\n   * Waits for the zone to settle before removing the element. Helps prevent\n   * errors where we end up removing an element which is in the middle of an animation.\n   */\n  private _completeExit() {\n    this._ngZone.onMicrotaskEmpty\n      .asObservable()\n      .first()\n      .subscribe(() => {\n        this.onExit.next();\n        this.onExit.complete();\n      });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'MatKeyboardComponent', 'selector': 'mat-keyboard'},{'name': 'MatKeyboardContainerComponent', 'selector': 'mat-keyboard-container'},{'name': 'MatKeyboardKeyComponent', 'selector': 'mat-keyboard-key'}];\n    var DIRECTIVES = [{'name': 'MatKeyboardDirective', 'selector': 'input[matKeyboard], textarea[matKeyboard]'}];\n    var ACTUAL_COMPONENT = {'name': 'MatKeyboardContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MatKeyboardDirective.html":{"url":"directives/MatKeyboardDirective.html","title":"directive - MatKeyboardDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MatKeyboardDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/directives/keyboard.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[matKeyboard], textarea[matKeyboard]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _keyboardRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                darkTheme\n                            \n                            \n                                duration\n                            \n                            \n                                isDebug\n                            \n                            \n                                matKeyboard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                altClick\n                            \n                            \n                                capsClick\n                            \n                            \n                                enterClick\n                            \n                            \n                                shiftClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_elementRef: ElementRef, _keyboardService: MatKeyboardService, _control?: NgControl)\n                    \n                \n                        \n                            \n                                Defined in src/core/src/directives/keyboard.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _keyboardService\n                                                  \n                                                        \n                                                                    MatKeyboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _control\n                                                  \n                                                        \n                                                                    NgControl\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        darkTheme\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        duration\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDebug\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        matKeyboard\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:15\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        altClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        capsClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enterClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        shiftClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:29\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _keyboardRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _keyboardRef:     MatKeyboardRef\n\n                    \n                \n                    \n                        \n                            Type :     MatKeyboardRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/directives/keyboard.directive.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, Optional, Output, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { MatKeyboardRef } from '../classes/keyboard-ref.class';\nimport { MatKeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { MatKeyboardService } from '../services/keyboard.service';\n\n@Directive({\n  selector: 'input[matKeyboard], textarea[matKeyboard]'\n})\nexport class MatKeyboardDirective implements OnDestroy {\n\n  private _keyboardRef: MatKeyboardRef;\n\n  @Input() matKeyboard: string;\n\n  @Input() darkTheme: boolean;\n\n  @Input() duration: number;\n\n  @Input() isDebug: boolean;\n\n  @Output() enterClick: EventEmitter = new EventEmitter();\n\n  @Output() capsClick: EventEmitter = new EventEmitter();\n\n  @Output() altClick: EventEmitter = new EventEmitter();\n\n  @Output() shiftClick: EventEmitter = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef,\n              private _keyboardService: MatKeyboardService,\n              @Optional() @Self() private _control?: NgControl) {}\n\n  ngOnDestroy() {\n    this._hideKeyboard();\n  }\n\n  @HostListener('focus', ['$event'])\n  private _showKeyboard() {\n    this._keyboardRef = this._keyboardService.open(this.matKeyboard, {\n      darkTheme: this.darkTheme,\n      duration: this.duration,\n      isDebug: this.isDebug\n    });\n\n    // reference the input element\n    this._keyboardRef.instance.setInputInstance(this._elementRef);\n\n    // set control if given, cast to smth. non-abstract\n    if (this._control) {\n      this._keyboardRef.instance.attachControl(this._control.control);\n    }\n\n    // connect outputs\n    this._keyboardRef.instance.enterClick.subscribe(() => this.enterClick.next());\n    this._keyboardRef.instance.capsClick.subscribe(() => this.capsClick.next());\n    this._keyboardRef.instance.altClick.subscribe(() => this.altClick.next());\n    this._keyboardRef.instance.shiftClick.subscribe(() => this.shiftClick.next());\n  }\n\n  @HostListener('blur', ['$event'])\n  private _hideKeyboard() {\n    if (this._keyboardRef) {\n      this._keyboardRef.dismiss();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MatKeyboardKebabCasePipe.html":{"url":"pipes/MatKeyboardKebabCasePipe.html","title":"pipe - MatKeyboardKebabCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MatKeyboardKebabCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/src/pipes/kebab-case.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        matKeyboardKebabCase\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/pipes/kebab-case.pipe.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'matKeyboardKebabCase',\n  pure: false\n})\nexport class MatKeyboardKebabCasePipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value.replace(/([a-z])([A-Z])/g, '$1-$2')\n      .replace(/\\s+/g, '-')\n      .toLowerCase();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MatKeyboardModule.html":{"url":"modules/MatKeyboardModule.html","title":"module - MatKeyboardModule","body":"\n                   \n\n\n\n\n  Modules\n  MatKeyboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatKeyboardModule\n\n\n\ncluster_MatKeyboardModule_declarations\n\n\n\ncluster_MatKeyboardModule_exports\n\n\n\ncluster_MatKeyboardModule_providers\n\n\n\n\nMatKeyboardComponent\n\nMatKeyboardComponent\n\n\n\nMatKeyboardModule\n\nMatKeyboardModule\n\nMatKeyboardModule -->\n\nMatKeyboardComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardContainerComponent\n\nMatKeyboardContainerComponent\n\nMatKeyboardModule -->\n\nMatKeyboardContainerComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardDirective\n\nMatKeyboardDirective\n\nMatKeyboardModule -->\n\nMatKeyboardDirective->MatKeyboardModule\n\n\n\n\n\nMatKeyboardKebabCasePipe\n\nMatKeyboardKebabCasePipe\n\nMatKeyboardModule -->\n\nMatKeyboardKebabCasePipe->MatKeyboardModule\n\n\n\n\n\nMatKeyboardKeyComponent\n\nMatKeyboardKeyComponent\n\nMatKeyboardModule -->\n\nMatKeyboardKeyComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardComponent \n\nMatKeyboardComponent \n\nMatKeyboardComponent  -->\n\nMatKeyboardModule->MatKeyboardComponent \n\n\n\n\n\nMatKeyboardContainerComponent \n\nMatKeyboardContainerComponent \n\nMatKeyboardContainerComponent  -->\n\nMatKeyboardModule->MatKeyboardContainerComponent \n\n\n\n\n\nMatKeyboardDirective \n\nMatKeyboardDirective \n\nMatKeyboardDirective  -->\n\nMatKeyboardModule->MatKeyboardDirective \n\n\n\n\n\nMatKeyboardKeyComponent \n\nMatKeyboardKeyComponent \n\nMatKeyboardKeyComponent  -->\n\nMatKeyboardModule->MatKeyboardKeyComponent \n\n\n\n\n\nMatKeyboardService\n\nMatKeyboardService\n\nMatKeyboardModule -->\n\nMatKeyboardService->MatKeyboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/src/keyboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MatKeyboardComponent\n                            \n                            \n                                MatKeyboardContainerComponent\n                            \n                            \n                                MatKeyboardDirective\n                            \n                            \n                                MatKeyboardKebabCasePipe\n                            \n                            \n                                MatKeyboardKeyComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                MatKeyboardComponent\n                            \n                            \n                                MatKeyboardContainerComponent\n                            \n                            \n                                MatKeyboardKeyComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     MatKeyboardService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MatKeyboardComponent\n                            \n                            \n                                    MatKeyboardContainerComponent\n                            \n                            \n                                    MatKeyboardDirective\n                            \n                            \n                                    MatKeyboardKeyComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // External modules\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n// Angular CDK\nimport { LIVE_ANNOUNCER_PROVIDER } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n// Angular material\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n// Configs\nimport { keyboardDeadkeys, MAT_KEYBOARD_DEADKEYS } from './configs/keyboard-deadkey.config';\nimport { keyboardIcons, MAT_KEYBOARD_ICONS } from './configs/keyboard-icons.config';\nimport { keyboardLayouts, MAT_KEYBOARD_LAYOUTS } from './configs/keyboard-layouts.config';\n// Components and directives\nimport { MatKeyboardContainerComponent } from './components/keyboard-container/keyboard-container.component';\nimport { MatKeyboardKeyComponent } from './components/keyboard-key/keyboard-key.component';\nimport { MatKeyboardComponent } from './components/keyboard/keyboard.component';\nimport { MatKeyboardDirective } from './directives/keyboard.directive';\n// Providers\nimport { MatKeyboardKebabCasePipe } from './pipes/kebab-case.pipe';\nimport { MatKeyboardService } from './services/keyboard.service';\n\n@NgModule({\n  imports: [\n    // Angular modules\n    CommonModule,\n    OverlayModule,\n\n    // Cdk modules\n    PortalModule,\n\n    // Material modules\n    MatButtonModule,\n    MatCommonModule,\n    MatIconModule,\n    MatInputModule\n  ],\n  exports: [\n    MatKeyboardComponent,\n    MatKeyboardContainerComponent,\n    MatKeyboardKeyComponent,\n    MatKeyboardDirective\n  ],\n  declarations: [\n    MatKeyboardKebabCasePipe,\n    MatKeyboardComponent,\n    MatKeyboardContainerComponent,\n    MatKeyboardKeyComponent,\n    MatKeyboardDirective\n  ],\n  entryComponents: [\n    MatKeyboardComponent,\n    MatKeyboardContainerComponent,\n    MatKeyboardKeyComponent\n  ],\n  providers: [\n    MatKeyboardService,\n    LIVE_ANNOUNCER_PROVIDER,\n    { provide: MAT_KEYBOARD_DEADKEYS, useValue: keyboardDeadkeys },\n    { provide: MAT_KEYBOARD_ICONS, useValue: keyboardIcons },\n    { provide: MAT_KEYBOARD_LAYOUTS, useValue: keyboardLayouts }\n  ]\n})\nexport class MatKeyboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatKeyboardRef.html":{"url":"classes/MatKeyboardRef.html","title":"class - MatKeyboardRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatKeyboardRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/classes/keyboard-ref.class.ts\n        \n\n            \n                Description\n            \n            \n                Reference to a keyboard dispatched from the keyboard service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _afterClosed\n                            \n                            \n                                    Private\n                                _afterOpened\n                            \n                            \n                                containerInstance\n                            \n                            \n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _finishDismiss\n                            \n                            \n                                _open\n                            \n                            \n                                afterDismissed\n                            \n                            \n                                afterOpened\n                            \n                            \n                                dismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(instance: MatKeyboardComponent, containerInstance: MatKeyboardContainerComponent, _overlayRef: OverlayRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/src/classes/keyboard-ref.class.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                  \n                                                        \n                                                                    MatKeyboardComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        containerInstance\n                                                  \n                                                        \n                                                                    MatKeyboardContainerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _overlayRef\n                                                  \n                                                        \n                                                                    OverlayRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterClosed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _afterClosed:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:15\n                            \n                        \n\n                \n                    \n                        Subject for notifying the user that the keyboard has closed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _afterOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _afterOpened:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:18\n                            \n                        \n\n                \n                    \n                        Subject for notifying the user that the keyboard has opened and appeared. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containerInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containerInstance:     MatKeyboardContainerComponent\n\n                    \n                \n                    \n                        \n                            Type :     MatKeyboardContainerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:24\n                            \n                        \n\n                \n                    \n                        The instance of the component making up the content of the keyboard. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     MatKeyboardComponent\n\n                    \n                \n                    \n                        \n                            Type :     MatKeyboardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:21\n                            \n                        \n\n                \n                    \n                        The instance of the component making up the content of the keyboard. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _finishDismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _finishDismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:63\n                            \n                        \n\n\n                \n                    \n                            Cleans up the DOM after closing. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _open\n                            \n                            \n                        \n                    \n                \n                \n                    \n_open()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:45\n                            \n                        \n\n\n                \n                    \n                            Marks the keyboard as opened \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            afterDismissed\n                            \n                            \n                        \n                    \n                \n                \n                    \nafterDismissed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:53\n                            \n                        \n\n\n                \n                    \n                            Gets an observable that is notified when the keyboard is finished closing. \n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            afterOpened\n                            \n                            \n                        \n                    \n                \n                \n                    \nafterOpened()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:58\n                            \n                        \n\n\n                \n                    \n                            Gets an observable that is notified when the keyboard has opened and appeared. \n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \ndismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/classes/keyboard-ref.class.ts:38\n                            \n                        \n\n\n                \n                    \n                            Dismisses the keyboard. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { OverlayRef } from '@angular/cdk/overlay';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { MatKeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { MatKeyboardContainerComponent } from '../components/keyboard-container/keyboard-container.component';\n\n/**\n * Reference to a keyboard dispatched from the keyboard service.\n */\nexport class MatKeyboardRef {\n\n  /** Subject for notifying the user that the keyboard has closed. */\n  private _afterClosed: Subject = new Subject();\n\n  /** Subject for notifying the user that the keyboard has opened and appeared. */\n  private _afterOpened: Subject = new Subject();\n\n  /** The instance of the component making up the content of the keyboard. */\n  instance: MatKeyboardComponent;\n\n  /** The instance of the component making up the content of the keyboard. */\n  containerInstance: MatKeyboardContainerComponent;\n\n  constructor(instance: MatKeyboardComponent,\n              containerInstance: MatKeyboardContainerComponent,\n              private _overlayRef: OverlayRef) {\n    // Sets the readonly instance of the keyboard content component.\n    this.instance = instance;\n    this.containerInstance = containerInstance;\n\n    // Finish dismiss on exitting\n    containerInstance.onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the keyboard. */\n  dismiss() {\n    if (!this._afterClosed.closed) {\n      this.containerInstance.exit();\n    }\n  }\n\n  /** Marks the keyboard as opened */\n  _open() {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Gets an observable that is notified when the keyboard is finished closing. */\n  afterDismissed(): Observable {\n    return this._afterClosed.asObservable();\n  }\n\n  /** Gets an observable that is notified when the keyboard has opened and appeared. */\n  afterOpened(): Observable {\n    return this.containerInstance.onEnter;\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss() {\n    this._overlayRef.dispose();\n\n    this._afterClosed.next();\n    this._afterClosed.complete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatKeyboardService.html":{"url":"injectables/MatKeyboardService.html","title":"injectable - MatKeyboardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatKeyboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/src/services/keyboard.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to dispatch Material Design keyboard.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _availableLocales\n                            \n                            \n                                    Private\n                                _keyboardRefAtThisLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _attachKeyboardContainer\n                            \n                            \n                                    Private\n                                _attachKeyboardContent\n                            \n                            \n                                    Private\n                                _createOverlay\n                            \n                            \n                                dismiss\n                            \n                            \n                                getLayoutForLocale\n                            \n                            \n                                mapLocale\n                            \n                            \n                                open\n                            \n                            \n                                openFromComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _openedKeyboardRef\n                                \n                                \n                                    availableLocales\n                                \n                                \n                                    isOpened\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_overlay: Overlay, _live: LiveAnnouncer, _defaultLocale: string, _layouts: IKeyboardLayouts, _parentKeyboard: MatKeyboardService)\n                    \n                \n                        \n                            \n                                Defined in src/core/src/services/keyboard.service.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _live\n                                                  \n                                                        \n                                                                    LiveAnnouncer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _defaultLocale\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _layouts\n                                                  \n                                                        \n                                                                    IKeyboardLayouts\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _parentKeyboard\n                                                  \n                                                        \n                                                                    MatKeyboardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _attachKeyboardContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _attachKeyboardContainer(overlayRef: OverlayRef, config: MatKeyboardConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:180\n                            \n                        \n\n\n                \n                    \n                            Attaches the keyboard container component to the overlay.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlayRef\n                                                        \n                                                                    OverlayRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    MatKeyboardConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatKeyboardContainerComponent\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _attachKeyboardContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _attachKeyboardContent(config: MatKeyboardConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:193\n                            \n                        \n\n\n                \n                    \n                            Places a new component as the content of the keyboard container.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    MatKeyboardConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatKeyboardRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:204\n                            \n                        \n\n\n                \n                    \n                            Creates a new overlay and places it in the correct location.\n\n\n                            \n                                Returns :     OverlayRef\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \ndismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:139\n                            \n                        \n\n\n                \n                    \n                            Dismisses the currently-visible keyboard.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLayoutForLocale\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLayoutForLocale(locale: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:173\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     IKeyboardLayout\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapLocale\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapLocale(locale: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:149\n                            \n                        \n\n\n                \n                    \n                            Map a given locale to a layout name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._defaultLocale\n                                                        \n\n                                                        \n                                                                The layout name\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(layoutOrLocale: string, config: MatKeyboardConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Opens a keyboard with a message and an optional action.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutOrLocale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._defaultLocale\n                                                        \n\n                                                        \n                                                                A string representing the locale or the layout name to be used.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    MatKeyboardConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                Additional configuration options for the keyboard.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatKeyboardRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFromComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFromComponent(layoutOrLocale: string, config: MatKeyboardConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Creates and dispatches a keyboard with a custom component for the content, removing any\ncurrently opened keyboards.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutOrLocale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                layout or locale to use.\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    MatKeyboardConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Extra configuration for the keyboard.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     MatKeyboardRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _availableLocales\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _availableLocales:     ILocaleMap\n\n                    \n                \n                    \n                        \n                            Type :     ILocaleMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _keyboardRefAtThisLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _keyboardRefAtThisLevel:     MatKeyboardRef | null\n\n                    \n                \n                    \n                        \n                            Type :     MatKeyboardRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/core/src/services/keyboard.service.ts:26\n                            \n                        \n\n                \n                    \n                        Reference to the current keyboard in the view at this level (in the Angular injector tree).\nIf there is a parent keyboard service, all operations should delegate to that parent\nvia _openedKeyboardRef.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _openedKeyboardRef\n                    \n                \n\n                \n                    \n                        get_openedKeyboardRef()\n                    \n                \n                            \n                                \n                                    Defined in src/core/src/services/keyboard.service.ts:31\n                                \n                            \n                    \n                        \n                                Reference to the currently opened keyboard at any level. \n\n\n                                \n                                    Returns :     MatKeyboardRef | null\n\n                                \n                        \n                    \n\n                \n                    \n                        set_openedKeyboardRef(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/core/src/services/keyboard.service.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        availableLocales\n                    \n                \n\n                \n                    \n                        getavailableLocales()\n                    \n                \n                            \n                                \n                                    Defined in src/core/src/services/keyboard.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isOpened\n                    \n                \n\n                \n                    \n                        getisOpened()\n                    \n                \n                            \n                                \n                                    Defined in src/core/src/services/keyboard.service.ts:48\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Inject, Injectable, LOCALE_ID, Optional, SkipSelf } from '@angular/core';\n\nimport { MatKeyboardRef } from '../classes/keyboard-ref.class';\nimport { MatKeyboardContainerComponent } from '../components/keyboard-container/keyboard-container.component';\nimport { MatKeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { MAT_KEYBOARD_LAYOUTS } from '../configs/keyboard-layouts.config';\nimport { MatKeyboardConfig } from '../configs/keyboard.config';\nimport { IKeyboardLayout } from '../interfaces/keyboard-layout.interface';\nimport { IKeyboardLayouts } from '../interfaces/keyboard-layouts.interface';\nimport { ILocaleMap } from '../interfaces/locale-map.interface';\nimport { _applyAvailableLayouts, _applyConfigDefaults } from '../utils/keyboard.utils';\n\n/**\n * Service to dispatch Material Design keyboard.\n */\n@Injectable()\nexport class MatKeyboardService {\n  /**\n   * Reference to the current keyboard in the view *at this level* (in the Angular injector tree).\n   * If there is a parent keyboard service, all operations should delegate to that parent\n   * via `_openedKeyboardRef`.\n   */\n  private _keyboardRefAtThisLevel: MatKeyboardRef | null = null;\n\n  private _availableLocales: ILocaleMap = {};\n\n  /** Reference to the currently opened keyboard at *any* level. */\n  private get _openedKeyboardRef(): MatKeyboardRef | null {\n    const parent = this._parentKeyboard;\n    return parent ? parent._openedKeyboardRef : this._keyboardRefAtThisLevel;\n  }\n\n  private set _openedKeyboardRef(value: MatKeyboardRef) {\n    if (this._parentKeyboard) {\n      this._parentKeyboard._openedKeyboardRef = value;\n    } else {\n      this._keyboardRefAtThisLevel = value;\n    }\n  }\n\n  get availableLocales(): ILocaleMap {\n    return this._availableLocales;\n  }\n\n  get isOpened(): boolean {\n    return !!this._openedKeyboardRef;\n  }\n\n  constructor(private _overlay: Overlay,\n              private _live: LiveAnnouncer,\n              @Inject(LOCALE_ID) private _defaultLocale: string,\n              @Inject(MAT_KEYBOARD_LAYOUTS) private _layouts: IKeyboardLayouts,\n              @Optional() @SkipSelf() private _parentKeyboard: MatKeyboardService) {\n    // prepare available layouts mapping\n    this._availableLocales = _applyAvailableLayouts(_layouts);\n  }\n\n  /**\n   * Creates and dispatches a keyboard with a custom component for the content, removing any\n   * currently opened keyboards.\n   *\n   * @param layoutOrLocale layout or locale to use.\n   * @param config Extra configuration for the keyboard.\n   */\n  openFromComponent(layoutOrLocale: string, config: MatKeyboardConfig): MatKeyboardRef {\n    const keyboardRef: MatKeyboardRef = this._attachKeyboardContent(config);\n\n    keyboardRef.instance.darkTheme = config.darkTheme;\n    keyboardRef.instance.isDebug = config.isDebug;\n\n    // a locale is provided\n    if (this.availableLocales[layoutOrLocale]) {\n      keyboardRef.instance.locale = layoutOrLocale;\n      keyboardRef.instance.layout = this.getLayoutForLocale(layoutOrLocale);\n    }\n\n    // a layout name is provided\n    if (this._layouts[layoutOrLocale]) {\n      keyboardRef.instance.layout = this._layouts[layoutOrLocale];\n      keyboardRef.instance.locale = this._layouts[layoutOrLocale].lang && this._layouts[layoutOrLocale].lang.pop();\n    }\n\n    // When the keyboard is dismissed, lower the keyboard counter.\n    keyboardRef\n      .afterDismissed()\n      .subscribe(() => {\n        // Clear the keyboard ref if it hasn't already been replaced by a newer keyboard.\n        if (this._openedKeyboardRef === keyboardRef) {\n          this._openedKeyboardRef = null;\n        }\n      });\n\n    if (this._openedKeyboardRef) {\n      // If a keyboard is already in view, dismiss it and enter the\n      // new keyboard after exit animation is complete.\n      this._openedKeyboardRef\n        .afterDismissed()\n        .subscribe(() => {\n          keyboardRef.containerInstance.enter();\n        });\n      this._openedKeyboardRef.dismiss();\n    } else {\n      // If no keyboard is in view, enter the new keyboard.\n      keyboardRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the keyboard is opened.\n    // if (configs.duration > 0) {\n    //   keyboardRef.afterOpened().subscribe(() => {\n    //     setTimeout(() => keyboardRef.dismiss(), configs.duration);\n    //   });\n    // }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n\n    this._openedKeyboardRef = keyboardRef;\n    return this._openedKeyboardRef;\n  }\n\n  /**\n   * Opens a keyboard with a message and an optional action.\n   * @param layoutOrLocale A string representing the locale or the layout name to be used.\n   * @param config Additional configuration options for the keyboard.\n   */\n  open(layoutOrLocale: string = this._defaultLocale, config: MatKeyboardConfig = {}): MatKeyboardRef {\n    const _config = _applyConfigDefaults(config);\n\n    return this.openFromComponent(layoutOrLocale, _config);\n  }\n\n  /**\n   * Dismisses the currently-visible keyboard.\n   */\n  dismiss() {\n    if (this._openedKeyboardRef) {\n      this._openedKeyboardRef.dismiss();\n    }\n  }\n\n  /**\n   * Map a given locale to a layout name.\n   * @param locale The layout name\n   */\n  mapLocale(locale: string = this._defaultLocale): string {\n    let layout: string;\n    const country = locale\n      .split('-')\n      .shift();\n\n    // search for layout matching the\n    // first part, the country code\n    if (this.availableLocales[country]) {\n      layout = this.availableLocales[locale];\n    }\n\n    // look if the detailed locale matches any layout\n    if (this.availableLocales[locale]) {\n      layout = this.availableLocales[locale];\n    }\n\n    if (!layout) {\n      throw Error(`No layout found for locale ${locale}`);\n    }\n\n    return layout;\n  }\n\n  getLayoutForLocale(locale: string): IKeyboardLayout {\n    return this._layouts[this.mapLocale(locale)];\n  }\n\n  /**\n   * Attaches the keyboard container component to the overlay.\n   */\n  private _attachKeyboardContainer(overlayRef: OverlayRef, config: MatKeyboardConfig): MatKeyboardContainerComponent {\n    const containerPortal = new ComponentPortal(MatKeyboardContainerComponent, config.viewContainerRef);\n    const containerRef: ComponentRef = overlayRef.attach(containerPortal);\n\n    // set config\n    containerRef.instance.keyboardConfig = config;\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Places a new component as the content of the keyboard container.\n   */\n  private _attachKeyboardContent(config: MatKeyboardConfig): MatKeyboardRef {\n    const overlayRef = this._createOverlay();\n    const container = this._attachKeyboardContainer(overlayRef, config);\n    const portal = new ComponentPortal(MatKeyboardComponent);\n    const contentRef = container.attachComponentPortal(portal);\n    return new MatKeyboardRef(contentRef.instance, container, overlayRef) as MatKeyboardRef;\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   */\n  private _createOverlay(): OverlayRef {\n    const state = new OverlayConfig({\n      width: '100%'\n    });\n\n    state.positionStrategy = this._overlay\n      .position()\n      .global()\n      .centerHorizontally()\n      .bottom('0');\n\n    return this._overlay.create(state);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.5\n        \n            @angular/cdk : 5.2.2\n        \n            @angular/common : 5.2.5\n        \n            @angular/compiler : 5.2.5\n        \n            @angular/core : 5.2.5\n        \n            @angular/forms : 5.2.5\n        \n            @angular/http : 5.2.5\n        \n            @angular/material : 5.2.2\n        \n            @angular/platform-browser : 5.2.5\n        \n            @angular/platform-browser-dynamic : 5.2.5\n        \n            @angular/router : 5.2.5\n        \n            classlist.js : 1.1.20150312\n        \n            core-js : 2.5.3\n        \n            hammerjs : 2.0.8\n        \n            reset-css : 2.2.1\n        \n            rxjs : 5.5.6\n        \n            web-animations-js : 2.3.1\n        \n            zone.js : 0.8.20\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            KeyboardAnimationState   (src/.../keyboard-animation-state.enum.ts)\n                        \n                        \n                            KeyboardAnimationTransition   (src/.../keyboard-animation-transition.enum.ts)\n                        \n                        \n                            KeyboardClassKey   (src/.../keyboard-class-key.enum.ts)\n                        \n                        \n                            KeyboardModifier   (src/.../keyboard-modifier.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/src/enums/keyboard-animation-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardAnimationState\n                    \n                \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value : void\n                            \n                        \n                        \n                            \n                                 Visible\n                            \n                        \n                        \n                            \n                                Value : visible\n                            \n                        \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value : hidden\n                            \n                        \n            \n        \n\n    src/core/src/enums/keyboard-animation-transition.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardAnimationTransition\n                    \n                \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value : visible => hidden\n                            \n                        \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value : void => visible\n                            \n                        \n            \n        \n\n    src/core/src/enums/keyboard-class-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardClassKey\n                    \n                \n                        \n                            \n                                 Alt\n                            \n                        \n                        \n                            \n                                Value : Alt\n                            \n                        \n                        \n                            \n                                 AltGr\n                            \n                        \n                        \n                            \n                                Value : AltGraph\n                            \n                        \n                        \n                            \n                                 AltLk\n                            \n                        \n                        \n                            \n                                Value : AltLk\n                            \n                        \n                        \n                            \n                                 Bksp\n                            \n                        \n                        \n                            \n                                Value : Backspace\n                            \n                        \n                        \n                            \n                                 Caps\n                            \n                        \n                        \n                            \n                                Value : CapsLock\n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value : Enter\n                            \n                        \n                        \n                            \n                                 Shift\n                            \n                        \n                        \n                            \n                                Value : Shift\n                            \n                        \n                        \n                            \n                                 Space\n                            \n                        \n                        \n                            \n                                Value :  \n                            \n                        \n                        \n                            \n                                 Tab\n                            \n                        \n                        \n                            \n                                Value : Tab\n                            \n                        \n            \n        \n\n    src/core/src/enums/keyboard-modifier.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardModifier\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                 Shift\n                            \n                        \n                        \n                            \n                                 Alt\n                            \n                        \n                        \n                            \n                                 ShiftAlt\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _applyAvailableLayouts   (src/.../keyboard.utils.ts)\n                        \n                        \n                            _applyConfigDefaults   (src/.../keyboard.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/src/utils/keyboard.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _applyAvailableLayouts\n                            \n                            \n                        \n                    \n                \n                \n                    \n_applyAvailableLayouts(layouts: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Applies available layouts.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layouts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _applyConfigDefaults\n                            \n                            \n                        \n                    \n                \n                \n                    \n_applyConfigDefaults(config: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            Applies default options to the keyboard configs.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The configuration to which the defaults will be applied.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nngx-material-keyboard\nOnscreen virtual keyboard for Angular using Angular Material.\n\nPlease note that the project is at a very early stage. Therefore one should refrain from productive usage.\n\n\nDemo\nA demo can be found here.\nDocs\nGenerated documentation can be found here.\nGetting started\n\nInstall with your prefered packet manager (we're using npm here):\nnpm install --save @ngx-material-keyboard/core\n\nBe sure to fulfill the peer dependencies of this module, in particular Angular and Angular Material.\n\n\nAdd the module to your project, e.g. app.module.ts:\n`:typescript\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\n...\nimport { MatKeyboardModule } from '@ngx-material-keyboard/core';\n\n\n@NgModule({\n  imports: [\n    // Angular modules\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n// Material modules\nMatButtonModule,\nMatKeyboardModule,  ],\n  ...\n})\nexport class AppModule {}\n\n3. Use the [`MatKeyboardDirective`][docs:MatKeyboardDirective] on your input elements or textareas and set the name or locale of the layout.\n> If not provided the locale will be derieved from the `LOCALE_ID` or the browser.\n```:angular2html\nProviding custom layouts\nMost of the base configurations are provided as injection tokens. Please read the documentation to \nunderstand how to handle it.\nAll layouts are based on (or directly inherited from) the angular-virtual-keyboard which is based on\n GreyWyvern VKI. For details on how to structure a layout see the comment derived from the original source code.\n\nNote that this will most likely be changed in the near future. But for now a huge range of layouts is already usable because of the \ngreat contribution back then.\n\nBut basicly you just provide the configuration of your new layout in your AppModule:\nimport { IKeyboardLayouts, keyboardLayouts, MAT_KEYBOARD_LAYOUTS, MatKeyboardModule } from '@ngx-material-keyboard/core';\n\nconst customLayouts: IKeyboardLayouts = {\n  ...keyboardLayouts,\n  'Tölles Läyout': {\n    'name': 'Awesome layout',\n    'keys': [\n      [\n        ['1', '!'],\n        ['2', '@'],\n        ['3', '#']\n      ]\n    ],\n    'lang': ['de-CH']\n  }\n};\n\n@NgModule({\n  ...\n  providers: [\n    { provide: MAT_KEYBOARD_LAYOUTS, useValue: customLayouts }\n  ],\n  ...\n})\nexport class AppModule {}Development\nThis repository is managed by and layed out for ng-packagr.\nVersioning\nThe application uses semver and is developed with the git flow branching model.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        MatKeyboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MatKeyboardModule\n\n\n\ncluster_MatKeyboardModule_declarations\n\n\n\ncluster_MatKeyboardModule_exports\n\n\n\ncluster_MatKeyboardModule_providers\n\n\n\n\nMatKeyboardComponent\n\nMatKeyboardComponent\n\n\n\nMatKeyboardModule\n\nMatKeyboardModule\n\nMatKeyboardModule -->\n\nMatKeyboardComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardContainerComponent\n\nMatKeyboardContainerComponent\n\nMatKeyboardModule -->\n\nMatKeyboardContainerComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardDirective\n\nMatKeyboardDirective\n\nMatKeyboardModule -->\n\nMatKeyboardDirective->MatKeyboardModule\n\n\n\n\n\nMatKeyboardKebabCasePipe\n\nMatKeyboardKebabCasePipe\n\nMatKeyboardModule -->\n\nMatKeyboardKebabCasePipe->MatKeyboardModule\n\n\n\n\n\nMatKeyboardKeyComponent\n\nMatKeyboardKeyComponent\n\nMatKeyboardModule -->\n\nMatKeyboardKeyComponent->MatKeyboardModule\n\n\n\n\n\nMatKeyboardComponent \n\nMatKeyboardComponent \n\nMatKeyboardComponent  -->\n\nMatKeyboardModule->MatKeyboardComponent \n\n\n\n\n\nMatKeyboardContainerComponent \n\nMatKeyboardContainerComponent \n\nMatKeyboardContainerComponent  -->\n\nMatKeyboardModule->MatKeyboardContainerComponent \n\n\n\n\n\nMatKeyboardDirective \n\nMatKeyboardDirective \n\nMatKeyboardDirective  -->\n\nMatKeyboardModule->MatKeyboardDirective \n\n\n\n\n\nMatKeyboardKeyComponent \n\nMatKeyboardKeyComponent \n\nMatKeyboardKeyComponent  -->\n\nMatKeyboardModule->MatKeyboardKeyComponent \n\n\n\n\n\nMatKeyboardService\n\nMatKeyboardService\n\nMatKeyboardModule -->\n\nMatKeyboardService->MatKeyboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
